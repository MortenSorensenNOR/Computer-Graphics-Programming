Software overview:

#############################################################
#                        APPLICATION                        #
#############################################################
-------------------------------------------------------------
#################### ################### ####################
#      ENGINE      # #     DISPLAY     # #  CORE UTILITIES  #
#################### ################### ####################

Application state:
- Current Render Target
- Application parameters
    * Render backend
    * Parameters for render backend, s.a. #threads for mult.thread.
    * Render Target Resolution
    * ?Enable/Disable GUI


Display overview: 
- Should be engine-backend agnostic
- Currently targeting SDL, GLFW is also possible, though then OpenGL is required

#######################################################################################
#                                       DISPLAY                                       #
#######################################################################################
---------------------------------------------------------------------------------------
###################### ################ ############################ ##################
#  INIT SDL DISPLAY  # #  INIT IMGUI  # #  RENDER FRAMEBUFFER SDL  # #  RENDER IMGUI  #
###################### ################ ############################ ##################

STATUS: DONE (✓)


Engine overview:

#######################################################################
#                               ENGINE                                #
#######################################################################
-----------------------------------------------------------------------
########### ####################### ################## ################
#  SCENE  # #  RENDERER FRONTEND  # #  ENGINE UTILS  # #  GAME LOGIC  #
########### ####################### ################## ################

STATUS: STARTING WORK

############################            
#         RENDERER         #
############################            
----------------------------            
############## #############
#  FRONTEND  # #  BACKEND  #
############## #############




Project file structure:

project/
│
├── src/
│   └── main.cpp
│
├── Application/
│   ├── Application.h
│   ├── Application.cpp
│   │
│   ├── Core_Utilities/
│   │
│   ├── Engine/
│   │   ├── engine.h
│   │   ├── engine.cpp
│   │   │
│   │   ├── Scene/
│   │   ├── Renderer_frontend/
│   │   └── Game_logic/
│   │
│   ├── Display/
│
└── CMakeLists.txt  


TODO:
1. Add key input to window component in order to extract active keys to application layer
    - Will add functions for checking input events on the sdl window
    - Map inputs to application state -> add header file in state module to access input state and add it to the application struct
